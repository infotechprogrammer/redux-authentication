{"version":3,"sources":["components/Header.module.css","components/UserProfile.module.css","store/counter.js","components/Counter.js","store/auth.js","components/Header.js","hooks/use-input.js","components/Auth.js","components/UserProfile.js","App.js","store/index.js","index.js","components/Auth.module.css","components/Counter.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterActions","actions","Counter","dispatch","useDispatch","useSelector","show","className","classes","value","onClick","authSlice","isAuthenticated","login","logout","authActions","Header","isAuth","auth","header","href","useInput","validateValue","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","Auth","isNotEmpty","trim","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmailNameInput","passwordValue","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPasswordInput","formIsValid","onSubmit","preventDefault","control","htmlFor","type","id","onChange","onBlur","disabled","UserProfile","profile","App","store","configureStore","reducer","counterReducer","authReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c046855b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__cormQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__snH4Q\"};","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = {counter : 0, showCounter: true};\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { counterActions } from '../store/counter';\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter.counter);\n  const show = useSelector(state => state.counter.showCounter);\n\n  // This will beusedif not using reduc toolkit but simple redux\n\n  // const toggleCounterHandler = () => {\n  //   dispatch({type:'toggle'});\n  // };\n\n  // const incrementHandler = () => {\n  //   dispatch({type:'increment'});\n  // };\n\n  // const increaseHandler = () => {\n  //   dispatch({type:'increase', value: 10,});\n  // };\n\n  // const decrementHandler = () => {\n  //   dispatch({type:'decrement'});\n  // };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10));\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 10</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state) {\r\n            \r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import { useDispatch, useSelector } from 'react-redux';\n\nimport classes from './Header.module.css';\nimport { authActions } from '../store/auth';\nconst Header = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n\n  const logoutHandler = () => {\n    dispatch(authActions.logout());\n  };\n\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      {isAuth && (\n      <nav>\n        <ul>\n          <li>\n            <a href='#'>My Products</a>\n          </li>\n          <li>\n            <a href='#'>My Sales</a>\n          </li>\n          <li>\n            <button onClick={logoutHandler}>Logout</button>\n          </li>\n        </ul>\n      </nav>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import { useState } from \"react\";\r\n\r\nconst useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n      setEnteredValue('');\r\n      setIsTouched(false);\r\n  }\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import { useDispatch } from \"react-redux\";\nimport { authActions } from \"../store/auth\";\nimport useInput from \"../hooks/use-input\";\nimport classes from \"./Auth.module.css\";\n\nconst Auth = () => {\n  const isNotEmpty = (value) => value.trim() !== \"\";\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailNameInput,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: passwordValue,\n    isValid: passwordIsValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput(isNotEmpty);\n\n  let formIsValid = false;\n\n  if (passwordIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const dispatch = useDispatch();\n  const loginHandler = (event) => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n    resetEmailNameInput();\n    resetPasswordInput();\n\n    dispatch(authActions.login());\n  };\n\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit={loginHandler}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={emailValue}\n              onChange={emailChangeHandler}\n              onBlur={emailBlurHandler}\n            />\n            {emailHasError && (\n              <p className=\"error-text\">Email address is empty</p>\n            )}\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={passwordValue}\n              onChange={passwordChangeHandler}\n              onBlur={passwordBlurHandler}\n            />\n            {passwordHasError && (\n              <p className=\"error-text\">Password is empty</p>\n            )}\n            \n          </div>\n          <button disabled={!formIsValid}>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>As you had logged in now you can access counter</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import { Fragment } from \"react\";\nimport { useSelector } from 'react-redux';\n\nimport Counter from \"./components/Counter\";\nimport Header from \"./components/Header\";\nimport Auth from \"./components/Auth\";\nimport UserProfile from \"./components/UserProfile\";\n\nfunction App() {\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n\n  return (\n    <Fragment>\n      <Header />\n      { !isAuth && <Auth />}\n      { isAuth && <Fragment> <UserProfile /> <Counter /> </Fragment>}\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport counterReducer from './counter';\r\nimport authReducer from './auth';\r\n\r\nconst store = configureStore({\r\n    reducer: {counter : counterReducer, auth: authReducer}\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root')); \n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__29-0W\",\"control\":\"Auth_control__ZahxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__3xUvc\",\"value\":\"Counter_value__QGiL0\"};"],"sourceRoot":""}